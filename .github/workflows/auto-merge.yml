name: Auto Merge PR

on:
  pull_request_review:
    types: [submitted]

  pull_request:
    types: [labeled]

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.event.action == 'submitted' || github.event.action == 'labeled'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check Labels
        id: check-labels
        uses: actions/github-script@v6
        with:
          script: |
            const labels = context.payload.pull_request.labels.map(label => label.name);
            core.setOutput("no_auto_merge", labels.includes("no auto merge"));
            core.setOutput("auto_merge", labels.includes("auto merge"));
            core.setOutput("main_merge", labels.includes("main merge"));

      - name: Auto Approve if Auto Merge Label Exists
        if: steps.check-labels.outputs.auto_merge == 'true'
        uses: hmarr/auto-approve-action@v2.0.0
        with:
          github-token: ${{ secrets.PUBLIC_ACCOUNT_TOKEN }}

      - name: Merge Pull Request
        if: github.event.action == 'submitted' && github.event.review.state == 'approved' && steps.check-labels.outputs.no_auto_merge == 'false'
        uses: actions/github-script@v6
        with:
          script: |
            const targetBranch = steps.check-labels.outputs.main_merge == 'true' ? 'main' : 'dev';
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
              merge_method: 'squash',
              commit_title: `Merge pull request #${context.payload.pull_request.number} into ${targetBranch}`,
              commit_message: 'Auto-merging PR',
              sha: context.payload.pull_request.head.sha,
              base: targetBranch
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge Pull Request on Label
        if: github.event.action == 'labeled' && steps.check-labels.outputs.no_auto_merge == 'false'
        uses: actions/github-script@v6
        with:
          script: |
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });

            const approved = reviews.some(review => review.state === 'APPROVED');
            const targetBranch = steps.check-labels.outputs.main_merge == 'true' ? 'main' : 'dev';

            if (approved) {
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                merge_method: 'squash',
                commit_title: `Merge pull request #${context.payload.pull_request.number} into ${targetBranch}`,
                commit_message: 'Auto-merging PR',
                sha: context.payload.pull_request.head.sha,
                base: targetBranch
              });
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
